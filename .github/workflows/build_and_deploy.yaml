name: Build and Deploy to Firebase and Cloud Run

on:
  pull_request:
    branches: [ live ]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT }}

jobs:
  build_and_deploy_backend:
    name: Build and Deploy the backend to Cloud Run
    runs-on: ubuntu-latest
    env:
      SERVICE: backend
      REGION: us-central1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cloud SDK
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} backend/
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
          region: ${{ env.REGION }}

  build_and_deploy_frontend:
    name: Build and Deploy the frontend to Firebase Hosting
    needs: [ build_and_deploy_backend ]
    runs-on: ubuntu-latest
    env:
      REACT_APP_DOMAIN: ${{ secrets.REACT_APP_DOMAIN }}
      REACT_APP_H_CAPTCHA_SITE_KEY: ${{ secrets.REACT_APP_HCAPTCHA_SITE_KEY }}
      REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
      REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
      REACT_APP_GCP_PROJECT_ID: env.GCP_PROJECT_ID
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build with npm
        working-directory: ./frontend
        run: npm ci && npm run build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          entrypoint: ./frontend
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SA_KEY }}'
          channelId: live
          projectId: ${{ env.GCP_PROJECT_ID }}