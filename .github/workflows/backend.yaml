name: Deploy the AWS Lambdas

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check if backend code has changed
        run: |
          LAST_TAG_SHA=$(git rev-list -n 1 $(git describe --abbrev=0 --tags ${{ github.ref }}^))
          CHANGED_FILES=$(git diff --name-only $LAST_TAG_SHA ${{ github.sha }} -- backend/)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No backend code was updated. Skipping deployment."
            exit 0
          fi

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Build subscribe function
        working-directory: backend
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build subscribe.go
          zip -j ./subscribe.zip ./subscribe

      - name: Build broadcast function
        working-directory: backend
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build broadcast.go
          zip -j ./broadcast.zip ./broadcast

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy subscribe function
        working-directory: backend
        run: |
          aws lambda update-function-code --function-name ${{ vars.LAMBDA_FUNCTION_SUBSCRIBE }} --zip-file fileb://./subscribe.zip

      - name: Deploy broadcast function
        working-directory: backend
        run: |
          aws lambda update-function-code --function-name ${{ vars.LAMBDA_FUNCTION_BROADCAST }} --zip-file fileb://./broadcast.zip

