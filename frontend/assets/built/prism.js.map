{"version":3,"file":"prism.js","sources":["prism.js"],"sourcesContent":["/* PrismJS 1.29.0\nhttps://prismjs.com/download.html?ref=ghost.org#themes=prism-tomorrow&languages=markup+css+clike+javascript+dart+docker+go+java+kotlin+rust+typescript&plugins=line-numbers */\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n;\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n(function (Prism) {\n\tvar keywords = [\n\t\t/\\b(?:async|sync|yield)\\*/,\n\t\t/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n\t];\n\n\t// Handles named imports, such as http.Client\n\tvar packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t// based on the dart naming conventions\n\tvar className = {\n\t\tpattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t};\n\n\tPrism.languages.dart = Prism.languages.extend('clike', {\n\t\t'class-name': [\n\t\t\tclassName,\n\t\t\t{\n\t\t\t\t// variables and parameters\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t}\n\t\t],\n\t\t'keyword': keywords,\n\t\t'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n\t});\n\n\tPrism.languages.insertBefore('dart', 'string', {\n\t\t'string-literal': {\n\t\t\tpattern: /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^\\$\\{?|\\}$/,\n\t\t\t\t\t\t'expression': {\n\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\t\tinside: Prism.languages.dart\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'string': undefined\n\t});\n\n\tPrism.languages.insertBefore('dart', 'class-name', {\n\t\t'metadata': {\n\t\t\tpattern: /@\\w+/,\n\t\t\talias: 'function'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('dart', 'class-name', {\n\t\t'generics': {\n\t\t\tpattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n\t\t\tinside: {\n\t\t\t\t'class-name': className,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t'operator': /[?&|]/\n\t\t\t}\n\t\t},\n\t});\n}(Prism));\n\n(function (Prism) {\n\n\t// Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n\t// that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n\n\tvar spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\n\t// At least one space, comment, or line break\n\tvar space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source\n\t\t.replace(/<SP_BS>/g, function () { return spaceAfterBackSlash; });\n\n\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n\tvar option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function () { return string; });\n\n\tvar stringRule = {\n\t\tpattern: RegExp(string),\n\t\tgreedy: true\n\t};\n\tvar commentRule = {\n\t\tpattern: /(^[ \\t]*)#.*/m,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t};\n\n\t/**\n\t * @param {string} source\n\t * @param {string} flags\n\t * @returns {RegExp}\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<OPT>/g, function () { return option; })\n\t\t\t.replace(/<SP>/g, function () { return space; });\n\n\t\treturn RegExp(source, flags);\n\t}\n\n\tPrism.languages.docker = {\n\t\t'instruction': {\n\t\t\tpattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'options': {\n\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, 'i'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'property': {\n\t\t\t\t\t\t\tpattern: /(^|\\s)--[\\w-]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'string': [\n\t\t\t\t\t\t\tstringRule,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'operator': /\\\\$/m,\n\t\t\t\t\t\t'punctuation': /=/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'keyword': [\n\t\t\t\t\t{\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#healthcheck\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#from\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#onbuild\n\t\t\t\t\t\tpattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /^\\w+/,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'comment': commentRule,\n\t\t\t\t'string': stringRule,\n\t\t\t\t'variable': /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n\t\t\t\t'operator': /\\\\$/m\n\t\t\t}\n\t\t},\n\t\t'comment': commentRule\n\t};\n\n\tPrism.languages.dockerfile = Prism.languages.docker;\n\n}(Prism));\n\nPrism.languages.go = Prism.languages.extend('clike', {\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n\t'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n\t'number': [\n\t\t// binary and octal integers\n\t\t/\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n\t\t// hexadecimal integers and floats\n\t\t/\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n\t\t// decimal integers and floats\n\t\t/(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n\t],\n\t'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n\t'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\n\nPrism.languages.insertBefore('go', 'string', {\n\t'char': {\n\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n\t\tgreedy: true\n\t}\n});\n\ndelete Prism.languages.go['class-name'];\n\n(function (Prism) {\n\n\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n\t// full package (optional) + parent classes (optional)\n\tvar classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t// based on the java naming conventions\n\tvar className = {\n\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\./\n\t\t}\n\t};\n\n\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t'string': {\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': [\n\t\t\tclassName,\n\t\t\t{\n\t\t\t\t// variables, parameters, and constructor references\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// class names based on keyword\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t}\n\t\t],\n\t\t'keyword': keywords,\n\t\t'function': [\n\t\t\tPrism.languages.clike.function,\n\t\t\t{\n\t\t\t\tpattern: /(::\\s*)[a-z_]\\w*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n\t});\n\n\tPrism.languages.insertBefore('java', 'string', {\n\t\t'triple-quoted-string': {\n\t\t\t// http://openjdk.java.net/jeps/355#Description\n\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'char': {\n\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('java', 'class-name', {\n\t\t'annotation': {\n\t\t\tpattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'generics': {\n\t\t\tpattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n\t\t\tinside: {\n\t\t\t\t'class-name': className,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t'operator': /[?&|]/\n\t\t\t}\n\t\t},\n\t\t'import': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'static',\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'static': /\\b\\w+$/,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'namespace': {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/\n\t\t\t\t\t.source.replace(/<keyword>/g, function () { return keywords.source; })),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t}\n\t});\n}(Prism));\n\n(function (Prism) {\n\tPrism.languages.kotlin = Prism.languages.extend('clike', {\n\t\t'keyword': {\n\t\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n\t\t\tpattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n\t\t'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n\t});\n\n\tdelete Prism.languages.kotlin['class-name'];\n\n\tvar interpolationInside = {\n\t\t'interpolation-punctuation': {\n\t\t\tpattern: /^\\$\\{?|\\}$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'expression': {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages.kotlin\n\t\t}\n\t};\n\n\tPrism.languages.insertBefore('kotlin', 'string', {\n\t\t// https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n\t\t'string-literal': [\n\t\t\t{\n\t\t\t\tpattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n\t\t\t\talias: 'multiline',\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n\t\t\t\t\t\tinside: interpolationInside\n\t\t\t\t\t},\n\t\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n\t\t\t\talias: 'singleline',\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: interpolationInside\n\t\t\t\t\t},\n\t\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'char': {\n\t\t\t// https://kotlinlang.org/spec/expressions.html#character-literals\n\t\t\tpattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tdelete Prism.languages.kotlin['string'];\n\n\tPrism.languages.insertBefore('kotlin', 'keyword', {\n\t\t'annotation': {\n\t\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n\t\t\talias: 'builtin'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('kotlin', 'function', {\n\t\t'label': {\n\t\t\tpattern: /\\b\\w+@|@\\w+\\b/,\n\t\t\talias: 'symbol'\n\t\t}\n\t});\n\n\tPrism.languages.kt = Prism.languages.kotlin;\n\tPrism.languages.kts = Prism.languages.kotlin;\n}(Prism));\n\n(function (Prism) {\n\n\tvar multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n\tfor (var i = 0; i < 2; i++) {\n\t\t// support 4 levels of nested comments\n\t\tmultilineComment = multilineComment.replace(/<self>/g, function () { return multilineComment; });\n\t}\n\tmultilineComment = multilineComment.replace(/<self>/g, function () { return /[^\\s\\S]/.source; });\n\n\n\tPrism.languages.rust = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'char': {\n\t\t\tpattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'attribute': {\n\t\t\tpattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n\t\t\tgreedy: true,\n\t\t\talias: 'attr-name',\n\t\t\tinside: {\n\t\t\t\t'string': null // see below\n\t\t\t}\n\t\t},\n\n\t\t// Closure params should not be confused with bitwise OR |\n\t\t'closure-params': {\n\t\t\tpattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'closure-punctuation': {\n\t\t\t\t\tpattern: /^\\||\\|$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: null // see below\n\t\t\t}\n\t\t},\n\n\t\t'lifetime-annotation': {\n\t\t\tpattern: /'\\w+/,\n\t\t\talias: 'symbol'\n\t\t},\n\n\t\t'fragment-specifier': {\n\t\t\tpattern: /(\\$\\w+:)[a-z]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'variable': /\\$\\w+/,\n\n\t\t'function-definition': {\n\t\t\tpattern: /(\\bfn\\s+)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'type-definition': {\n\t\t\tpattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'module-declaration': [\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'namespace'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'namespace',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /::/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'keyword': [\n\t\t\t// https://github.com/rust-lang/reference/blob/master/src/keywords.md\n\t\t\t/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n\t\t\t// primitives and str\n\t\t\t// https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n\t\t\t/\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n\t\t],\n\n\t\t// functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n\t\t// and Rust's naming conventions recommend snake_case anyway.\n\t\t// https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n\t\t'function': /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n\t\t'macro': {\n\t\t\tpattern: /\\b\\w+!/,\n\t\t\talias: 'property'\n\t\t},\n\t\t'constant': /\\b[A-Z_][A-Z_\\d]+\\b/,\n\t\t'class-name': /\\b[A-Z]\\w*\\b/,\n\n\t\t'namespace': {\n\t\t\tpattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t},\n\n\t\t// Hex, oct, bin, dec numbers with visual separators and type suffix\n\t\t'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/,\n\t\t'punctuation': /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n\t\t'operator': /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n\t};\n\n\tPrism.languages.rust['closure-params'].inside.rest = Prism.languages.rust;\n\tPrism.languages.rust['attribute'].inside['string'] = Prism.languages.rust['string'];\n\n}(Prism));\n\n(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t *\n\t * @type {string}\n\t */\n\tvar PLUGIN_NAME = 'line-numbers';\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t *\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n\n\t/**\n\t * Global exports\n\t */\n\tvar config = Prism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t *\n\t\t * @param {Element} element pre element\n\t\t * @param {number} number line number\n\t\t * @returns {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\t\tif (!lineNumberRows) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart;\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd;\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart;\n\n\t\t\treturn lineNumberRows.children[lineIndex];\n\t\t},\n\n\t\t/**\n\t\t * Resizes the line numbers of the given element.\n\t\t *\n\t\t * This function will not add line numbers. It will only resize existing ones.\n\t\t *\n\t\t * @param {HTMLElement} element A `<pre>` element with line numbers.\n\t\t * @returns {void}\n\t\t */\n\t\tresize: function (element) {\n\t\t\tresizeElements([element]);\n\t\t},\n\n\t\t/**\n\t\t * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n\t\t * the current viewport.\n\t\t *\n\t\t * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n\t\t *\n\t\t * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tassumeViewportIndependence: true\n\t};\n\n\t/**\n\t * Resizes the given elements.\n\t *\n\t * @param {HTMLElement[]} elements\n\t */\n\tfunction resizeElements(elements) {\n\t\telements = elements.filter(function (e) {\n\t\t\tvar codeStyles = getStyles(e);\n\t\t\tvar whiteSpace = codeStyles['white-space'];\n\t\t\treturn whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n\t\t});\n\n\t\tif (elements.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar infos = elements.map(function (element) {\n\t\t\tvar codeElement = element.querySelector('code');\n\t\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\t\tif (!codeElement || !lineNumbersWrapper) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\t\tif (!lineNumberSizer) {\n\t\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t\t}\n\n\t\t\tlineNumberSizer.innerHTML = '0';\n\t\t\tlineNumberSizer.style.display = 'block';\n\n\t\t\tvar oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\treturn {\n\t\t\t\telement: element,\n\t\t\t\tlines: codeLines,\n\t\t\t\tlineHeights: [],\n\t\t\t\toneLinerHeight: oneLinerHeight,\n\t\t\t\tsizer: lineNumberSizer,\n\t\t\t};\n\t\t}).filter(Boolean);\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lines = info.lines;\n\t\t\tvar lineHeights = info.lineHeights;\n\t\t\tvar oneLinerHeight = info.oneLinerHeight;\n\n\t\t\tlineHeights[lines.length - 1] = undefined;\n\t\t\tlines.forEach(function (line, index) {\n\t\t\t\tif (line && line.length > 1) {\n\t\t\t\t\tvar e = lineNumberSizer.appendChild(document.createElement('span'));\n\t\t\t\t\te.style.display = 'block';\n\t\t\t\t\te.textContent = line;\n\t\t\t\t} else {\n\t\t\t\t\tlineHeights[index] = oneLinerHeight;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lineHeights = info.lineHeights;\n\n\t\t\tvar childIndex = 0;\n\t\t\tfor (var i = 0; i < lineHeights.length; i++) {\n\t\t\t\tif (lineHeights[i] === undefined) {\n\t\t\t\t\tlineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar wrapper = info.element.querySelector('.line-numbers-rows');\n\n\t\t\tlineNumberSizer.style.display = 'none';\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\tinfo.lineHeights.forEach(function (height, lineNumber) {\n\t\t\t\twrapper.children[lineNumber].style.height = height + 'px';\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns style declarations for the element\n\t *\n\t * @param {Element} element\n\t */\n\tfunction getStyles(element) {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n\t}\n\n\tvar lastWidth = undefined;\n\twindow.addEventListener('resize', function () {\n\t\tif (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n\t\t\treturn;\n\t\t}\n\t\tlastWidth = window.innerWidth;\n\n\t\tresizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!env.code) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar code = /** @type {Element} */ (env.element);\n\t\tvar pre = /** @type {HTMLElement} */ (code.parentNode);\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector('.line-numbers-rows')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!Prism.util.isActive(code, PLUGIN_NAME)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.classList.remove(PLUGIN_NAME);\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tpre.classList.add(PLUGIN_NAME);\n\n\t\tvar match = env.code.match(NEW_LINE_EXP);\n\t\tvar linesNum = match ? match.length + 1 : 1;\n\t\tvar lineNumbersWrapper;\n\n\t\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\t\tlineNumbersWrapper = document.createElement('span');\n\t\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\t\tlineNumbersWrapper.className = 'line-numbers-rows';\n\t\tlineNumbersWrapper.innerHTML = lines;\n\n\t\tif (pre.hasAttribute('data-start')) {\n\t\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper);\n\n\t\tresizeElements([pre]);\n\n\t\tPrism.hooks.run('line-numbers', env);\n\t});\n\n\tPrism.hooks.add('line-numbers', function (env) {\n\t\tenv.plugins = env.plugins || {};\n\t\tenv.plugins.lineNumbers = true;\n\t});\n\n}());\n\n"],"names":["_self","window","WorkerGlobalScope","self","Prism","readyState","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","currentScript","document","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","token","grammar","ret","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","list","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","length","cause","flags","patternObj","lookbehind","greedy","pattern","global","match","source","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","index","from","to","p","k","matchStr","after","removeFrom","prev","wrapped","removeRange","nestedRematch","array","node","push","all","name","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","count","s","e","tag","classes","attributes","aliases","join","script","defer","addEventListener","highlightAutomaticallyCallback","requestAnimationFrame","setTimeout","message","parse","close","module","exports","markup","comment","prolog","doctype","internal-subset","string","punctuation","doctype-tag","cdata","namespace","special-attr","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","attrName","html","mathml","svg","xml","ssml","atom","rss","css","atrule","rule","selector-function-argument","keyword","url","function","important","addInlined","addAttribute","clike","class-name","boolean","number","operator","javascript","regex","regex-source","regex-delimiter","regex-flags","function-variable","parameter","constant","hashbang","template-string","template-punctuation","interpolation","interpolation-punctuation","string-property","literal-property","js","keywords","packagePrefix","dart","string-literal","expression","undefined","metadata","generics","spaceAfterBackSlash","space","option","stringRule","commentRule","re","docker","instruction","options","variable","dockerfile","go","builtin","char","classNamePrefix","java","triple-quoted-string","annotation","import","static","kotlin","interpolationInside","label","kt","kts","multilineComment","rust","attribute","closure-params","closure-punctuation","lifetime-annotation","fragment-specifier","function-definition","type-definition","module-declaration","macro","typescript","typeInside","decorator","at","generic-function","generic","ts","PLUGIN_NAME","NEW_LINE_EXP","config","lastWidth","resizeElements","filter","whiteSpace","getComputedStyle","currentStyle","infos","codeLines","codeElement","querySelector","lineNumbersWrapper","lineNumberSizer","split","createElement","appendChild","style","display","oneLinerHeight","getBoundingClientRect","height","lines","lineHeights","sizer","Boolean","info","line","childIndex","children","wrapper","lineNumber","lineNumbers","getLine","lineIndex","lineNumberRows","lineNumberEnd","lineNumberStart","parseInt","getAttribute","resize","assumeViewportIndependence","innerWidth","pre","test","remove","linesNum","counterReset"],"mappings":"AAIA,IAAIA,MAA2B,aAAlB,OAAOC,OACjBA,OAE6B,aAA7B,OAAOC,mBAAqCC,gBAAgBD,kBAC1DC,KACA,GAWDC,MAAS,SAAUJ,GAGtB,IAipCKK,EAjpCDC,EAAO,0CACPC,EAAW,EAGXC,EAAmB,GAGnBC,EAAI,CAsBPC,OAAQV,EAAMI,OAASJ,EAAMI,MAAMM,OAsBnCC,4BAA6BX,EAAMI,OAASJ,EAAMI,MAAMO,4BAWxDC,KAAM,CACLC,OAAQ,SAASA,EAAOC,GACvB,OAAIA,aAAkBC,EACd,IAAIA,EAAMD,EAAOE,KAAMH,EAAOC,EAAOG,OAAO,EAAGH,EAAOI,KAAK,EACxDC,MAAMC,QAAQN,CAAM,EACvBA,EAAOO,IAAIR,CAAM,EAEjBC,EAAOQ,QAAQ,KAAM,OAAO,EAAEA,QAAQ,KAAM,MAAM,EAAEA,QAAQ,UAAW,GAAG,CAEnF,EAkBAN,KAAM,SAAUO,GACf,OAAOC,OAAOC,UAAUC,SAASC,KAAKJ,CAAC,EAAEK,MAAM,EAAG,CAAC,CAAC,CACrD,EAQAC,MAAO,SAAUC,GAIhB,OAHKA,EAAU,MACdN,OAAOO,eAAeD,EAAK,OAAQ,CAAEE,MAAO,EAAEzB,CAAS,CAAC,EAElDuB,EAAU,IAClB,EAYAG,MAAO,SAASC,EAAUX,EAAGY,GAG5B,IAAIF,EAAWG,EACf,OAHAD,EAAUA,GAAW,GAGb1B,EAAEG,KAAKI,KAAKO,CAAC,GACpB,IAAK,SAEJ,GADAa,EAAK3B,EAAEG,KAAKiB,MAAMN,CAAC,EACfY,EAAQC,GACX,OAAOD,EAAQC,GAKhB,IAAK,IAAIC,KAHTJ,EAA2C,GAC3CE,EAAQC,GAAMH,EAEEV,EACXA,EAAEe,eAAeD,CAAG,IACvBJ,EAAMI,GAAOH,EAAUX,EAAEc,GAAMF,CAAO,GAIxC,OAA0B,EAE3B,IAAK,QAEJ,OADAC,EAAK3B,EAAEG,KAAKiB,MAAMN,CAAC,EACfY,EAAQC,IACJD,EAAQC,IAEhBH,EAAQ,GACRE,EAAQC,GAAMH,EAEd,EAA8CM,QAAQ,SAAUC,EAAGC,GAClER,EAAMQ,GAAKP,EAAUM,EAAGL,CAAO,CAChC,CAAC,EAEyB,GAE3B,QACC,OAAOZ,CACT,CACD,EAUAmB,YAAa,SAAUC,GACtB,KAAOA,GAAS,CACf,IAAIC,EAAItC,EAAKuC,KAAKF,EAAQG,SAAS,EACnC,GAAIF,EACH,OAAOA,EAAE,GAAGG,YAAY,EAEzBJ,EAAUA,EAAQK,aACnB,CACA,MAAO,MACR,EASAC,YAAa,SAAUN,EAASO,GAG/BP,EAAQG,UAAYH,EAAQG,UAAUxB,QAAQ6B,OAAO7C,EAAM,IAAI,EAAG,EAAE,EAIpEqC,EAAQS,UAAUC,IAAI,YAAcH,CAAQ,CAC7C,EASAI,cAAe,WACd,GAAwB,aAApB,OAAOC,SACV,OAAO,KAER,GAAI,kBAAmBA,SACtB,OAA2BA,SAAsB,cAOlD,IACC,MAAM,IAAIC,KAmBX,CAlBE,MAAOC,GAQR,IAAIC,GAAO,qCAAqCb,KAAKY,EAAIE,KAAK,GAAK,IAAI,GACvE,GAAID,EAAK,CACR,IACSjB,EADLmB,EAAUL,SAASM,qBAAqB,QAAQ,EACpD,IAASpB,KAAKmB,EACb,GAAIA,EAAQnB,GAAGiB,KAAOA,EACrB,OAAOE,EAAQnB,EAGlB,CACA,OAAO,IACR,CACD,EAqBAqB,SAAU,SAAUnB,EAASG,EAAWiB,GAGvC,IAFA,IAAIC,EAAK,MAAQlB,EAEVH,GAAS,CACf,IAAIS,EAAYT,EAAQS,UACxB,GAAIA,EAAUa,SAASnB,CAAS,EAC/B,MAAO,CAAA,EAER,GAAIM,EAAUa,SAASD,CAAE,EACxB,MAAO,CAAA,EAERrB,EAAUA,EAAQK,aACnB,CACA,MAAO,CAAC,CAACe,CACV,CACD,EASAG,UAAW,CAIVC,MAAO3D,EACP4D,UAAW5D,EACX6D,KAAM7D,EACN8D,IAAK9D,EA8BL+D,OAAQ,SAAUnC,EAAIoC,GACrB,IAESnC,EAFL/B,EAAOG,EAAEG,KAAKqB,MAAMxB,EAAEyD,UAAU9B,EAAG,EAEvC,IAASC,KAAOmC,EACflE,EAAK+B,GAAOmC,EAAMnC,GAGnB,OAAO/B,CACR,EA6EAmE,aAAc,SAAUC,EAAQC,EAAQC,EAAQC,GAE/C,IAISC,EAJLC,GADJF,EAAOA,GAA4BpE,EAAW,WAC3BiE,GAEfM,EAAM,GAEV,IAASF,KAASC,EACjB,GAAIA,EAAQzC,eAAewC,CAAK,EAAG,CAElC,GAAIA,GAASH,EACZ,IAAK,IAAIM,KAAYL,EAChBA,EAAOtC,eAAe2C,CAAQ,IACjCD,EAAIC,GAAYL,EAAOK,IAMrBL,EAAOtC,eAAewC,CAAK,IAC/BE,EAAIF,GAASC,EAAQD,GAEvB,CAGD,IAAII,EAAML,EAAKH,GAUf,OATAG,EAAKH,GAAUM,EAGfvE,EAAEyD,UAAUiB,IAAI1E,EAAEyD,UAAW,SAAU7B,EAAKL,GACvCA,IAAUkD,GAAO7C,GAAOqC,IAC3BU,KAAK/C,GAAO2C,EAEd,CAAC,EAEMA,CACR,EAGAG,IAAK,SAASA,EAAI5D,EAAG8D,EAAUrE,EAAMmB,GACpCA,EAAUA,GAAW,GAErB,IAESM,EAIH6C,EACAC,EAPF1D,EAAQpB,EAAEG,KAAKiB,MAEnB,IAASY,KAAKlB,EACTA,EAAEe,eAAeG,CAAC,IACrB4C,EAAS1D,KAAKJ,EAAGkB,EAAGlB,EAAEkB,GAAIzB,GAAQyB,CAAC,EAE/B6C,EAAW/D,EAAEkB,GAGI,YAFjB8C,EAAe9E,EAAEG,KAAKI,KAAKsE,CAAQ,IAELnD,EAAQN,EAAMyD,CAAQ,GAG5B,UAAjBC,GAA6BpD,EAAQN,EAAMyD,CAAQ,KAC7DnD,EAAQN,EAAMyD,CAAQ,GAAK,CAAA,EAC3BH,EAAIG,EAAUD,EAAU5C,EAAGN,CAAO,IAJlCA,EAAQN,EAAMyD,CAAQ,GAAK,CAAA,EAC3BH,EAAIG,EAAUD,EAAU,KAAMlD,CAAO,GAOzC,CACD,EAEAqD,QAAS,GAcTC,aAAc,SAAUC,EAAOL,GAC9B5E,EAAEkF,kBAAkBpC,SAAUmC,EAAOL,CAAQ,CAC9C,EAiBAM,kBAAmB,SAAUC,EAAWF,EAAOL,GAC9C,IAAIQ,EAAM,CACTR,SAAUA,EACVO,UAAWA,EACXE,SAAU,kGACX,EAEArF,EAAEsF,MAAMC,IAAI,sBAAuBH,CAAG,EAEtCA,EAAII,SAAW9E,MAAMM,UAAUG,MAAMsE,MAAML,EAAID,UAAUO,iBAAiBN,EAAIC,QAAQ,CAAC,EAEvFrF,EAAEsF,MAAMC,IAAI,gCAAiCH,CAAG,EAEhD,IAAK,IAAWlD,EAAPF,EAAI,EAAaE,EAAUkD,EAAII,SAASxD,CAAC,KACjDhC,EAAE2F,iBAAiBzD,EAAmB,CAAA,IAAV+C,EAAgBG,EAAIR,QAAQ,CAE1D,EA8BAe,iBAAkB,SAAUzD,EAAS+C,EAAOL,GAE3C,IAAInC,EAAWzC,EAAEG,KAAK8B,YAAYC,CAAO,EACrCoC,EAAUtE,EAAEyD,UAAUhB,GAMtBmD,GAHJ5F,EAAEG,KAAKqC,YAAYN,EAASO,CAAQ,EAGvBP,EAAQK,eACjBqD,GAA4C,QAAlCA,EAAOC,SAASvD,YAAY,GACzCtC,EAAEG,KAAKqC,YAAYoD,EAAQnD,CAAQ,EATpC,IAcI2C,EAAM,CACTlD,QAASA,EACTO,SAAUA,EACV6B,QAASA,EACTwB,KANU5D,EAAQ6D,WAOnB,EAEA,SAASC,EAAsBC,GAC9Bb,EAAIa,gBAAkBA,EAEtBjG,EAAEsF,MAAMC,IAAI,gBAAiBH,CAAG,EAEhCA,EAAIlD,QAAQgE,UAAYd,EAAIa,gBAE5BjG,EAAEsF,MAAMC,IAAI,kBAAmBH,CAAG,EAClCpF,EAAEsF,MAAMC,IAAI,WAAYH,CAAG,EAC3BR,GAAYA,EAAS1D,KAAKkE,EAAIlD,OAAO,CACtC,CAEAlC,EAAEsF,MAAMC,IAAI,sBAAuBH,CAAG,GAGtCQ,EAASR,EAAIlD,QAAQK,gBAC2B,QAAlCqD,EAAOC,SAASvD,YAAY,GAAe,CAACsD,EAAOO,aAAa,UAAU,GACvFP,EAAOQ,aAAa,WAAY,GAAG,EAG/BhB,EAAIU,MAMT9F,EAAEsF,MAAMC,IAAI,mBAAoBH,CAAG,EAE9BA,EAAId,QAKLW,GAAS1F,EAAM8G,SACdC,EAAS,IAAID,OAAOrG,EAAEuG,QAAQ,GAE3BC,UAAY,SAAUC,GAC5BT,EAAsBS,EAAIC,IAAI,CAC/B,EAEAJ,EAAOK,YAAYC,KAAKC,UAAU,CACjCpE,SAAU2C,EAAI3C,SACdqD,KAAMV,EAAIU,KACVgB,eAAgB,CAAA,CACjB,CAAC,CAAC,GAEFd,EAAsBhG,EAAE+G,UAAU3B,EAAIU,KAAMV,EAAId,QAASc,EAAI3C,QAAQ,CAAC,EAjBtEuD,EAAsBhG,EAAEG,KAAKC,OAAOgF,EAAIU,IAAI,CAAC,IAR7C9F,EAAEsF,MAAMC,IAAI,WAAYH,CAAG,EAC3BR,GAAYA,EAAS1D,KAAKkE,EAAIlD,OAAO,EA0BvC,EAsBA6E,UAAW,SAAUnD,EAAMU,EAAS7B,GAC/B2C,EAAM,CACTU,KAAMlC,EACNU,QAASA,EACT7B,SAAUA,CACX,EAEA,GADAzC,EAAEsF,MAAMC,IAAI,kBAAmBH,CAAG,EAC7BA,EAAId,QAKT,OAFAc,EAAI/E,OAASL,EAAEgH,SAAS5B,EAAIU,KAAMV,EAAId,OAAO,EAC7CtE,EAAEsF,MAAMC,IAAI,iBAAkBH,CAAG,EAC1B9E,EAAMuG,UAAU7G,EAAEG,KAAKC,OAAOgF,EAAI/E,MAAM,EAAG+E,EAAI3C,QAAQ,EAJ7D,MAAM,IAAIM,MAAM,iBAAmBqC,EAAI3C,SAAW,mBAAmB,CAKvE,EA0BAuE,SAAU,SAAUpD,EAAMU,GACzB,IAAI2C,EAAO3C,EAAQ2C,KACnB,GAAIA,EAAM,CACT,IAAK,IAAI5C,KAAS4C,EACjB3C,EAAQD,GAAS4C,EAAK5C,GAGvB,OAAOC,EAAQ2C,IAChB,CAibD,IA/aC,IAAIC,EAAY,IAAIC,EA4aLC,GA3afC,EAASH,EAAWA,EAAUI,KAAM1D,CAAI,EAExC2D,CAiNF,SAASA,EAAa3D,EAAMsD,EAAW5C,EAASkD,EAAWC,EAAUC,GACpE,IAAK,IAAIrD,KAASC,EACjB,GAAKA,EAAQzC,eAAewC,CAAK,GAAMC,EAAQD,GAA/C,CAIA,IAAIsD,EAAWrD,EAAQD,GACvBsD,EAAWjH,MAAMC,QAAQgH,CAAQ,EAAIA,EAAW,CAACA,GAEjD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASE,OAAQ,EAAED,EAAG,CACzC,GAAIF,GAAWA,EAAQI,OAASzD,EAAQ,IAAMuD,EAC7C,OAkBD,IAfA,IAQKG,EARDC,EAAaL,EAASC,GACtB3D,EAAS+D,EAAW/D,OACpBgE,EAAa,CAAC,CAACD,EAAWC,WAC1BC,EAAS,CAAC,CAACF,EAAWE,OACtBzH,EAAQuH,EAAWvH,MASnB0H,GAPAD,GAAU,CAACF,EAAWG,QAAQC,SAE7BL,EAAQC,EAAWG,QAAQlH,SAAS,EAAEoH,MAAM,WAAW,EAAE,GAC7DL,EAAWG,QAAUzF,OAAOsF,EAAWG,QAAQG,OAAQP,EAAQ,GAAG,GAIrDC,EAAWG,SAAWH,GAG/BO,EAAcf,EAAUgB,KAAMC,EAAMhB,EACxCc,IAAgBrB,EAAUwB,MAItBhB,EAAAA,GAAWe,GAAOf,EAAQiB,OAH9BF,GAAOF,EAAYhH,MAAMsG,OAAQU,EAAcA,EAAYC,KAC1D,CAMD,IAAII,EAAML,EAAYhH,MAEtB,GAAI2F,EAAUW,OAASjE,EAAKiE,OAE3B,OAGD,GAAIe,EAAAA,aAAetI,GAAnB,CAIA,IACI+H,EADAQ,EAAc,EAGlB,GAAIX,EAAQ,CAEX,GAAI,EADJG,EAAQS,EAAaX,EAASM,EAAK7E,EAAMqE,CAAU,IACrCI,EAAMU,OAASnF,EAAKiE,OACjC,MAGD,IAAImB,EAAOX,EAAMU,MACbE,EAAKZ,EAAMU,MAAQV,EAAM,GAAGR,OAC5BqB,EAAIT,EAIR,IADAS,GAAKX,EAAYhH,MAAMsG,OACRqB,GAARF,GACNT,EAAcA,EAAYC,KAC1BU,GAAKX,EAAYhH,MAAMsG,OAOxB,GAJAqB,GAAKX,EAAYhH,MAAMsG,OACvBY,EAAMS,EAGFX,EAAYhH,iBAAiBjB,EAChC,SAID,IACC,IAAI6I,EAAIZ,EACRY,IAAMjC,EAAUwB,OAASQ,EAAID,GAAyB,UAAnB,OAAOE,EAAE5H,OAC5C4H,EAAIA,EAAEX,KAENK,CAAW,GACXK,GAAKC,EAAE5H,MAAMsG,OAEdgB,CAAW,GAGXD,EAAMhF,EAAKzC,MAAMsH,EAAKS,CAAC,EACvBb,EAAMU,OAASN,CAChB,MAEC,GAAI,EADJJ,EAAQS,EAAaX,EAAS,EAAGS,EAAKX,CAAU,GAE/C,SAKF,IAAIe,EAAOX,EAAMU,MACbK,EAAWf,EAAM,GACjBnE,EAAS0E,EAAIzH,MAAM,EAAG6H,CAAI,EAC1BK,EAAQT,EAAIzH,MAAM6H,EAAOI,EAASvB,MAAM,EAExCc,EAAQF,EAAMG,EAAIf,OAKlByB,GAJA5B,GAAWiB,EAAQjB,EAAQiB,QAC9BjB,EAAQiB,MAAQA,GAGAJ,EAAYgB,MASzBC,GAPAtF,IACHoF,EAAajC,EAASH,EAAWoC,EAAYpF,CAAM,EACnDuE,GAAOvE,EAAO2D,QAGf4B,EAAYvC,EAAWoC,EAAYT,CAAW,EAEhC,IAAIvI,EAAM+D,EAAOJ,EAASjE,EAAEgH,SAASoC,EAAUnF,CAAM,EAAImF,EAAU3I,EAAO2I,CAAQ,GAChGb,EAAclB,EAASH,EAAWoC,EAAYE,CAAO,EAEjDH,GACHhC,EAASH,EAAWqB,EAAac,CAAK,EAGrB,EAAdR,IAKCa,EAAgB,CACnB5B,MAAOzD,EAAQ,IAAMuD,EACrBe,MAAOA,CACR,EACApB,EAAa3D,EAAMsD,EAAW5C,EAASiE,EAAYgB,KAAMd,EAAKiB,CAAa,EAGvEhC,IAAWgC,EAAcf,MAAQjB,EAAQiB,QAC5CjB,EAAQiB,MAAQe,EAAcf,MA3FhC,CA8FD,CACD,CA3IA,CA6IF,EAlWe/E,EAAMsD,EAAW5C,EAAS4C,EAAUI,KAAM,CAAC,EAEzCJ,GAwaZyC,EAAQ,GACRC,EAAOxC,EAAKE,KAAKkB,KACdoB,IAASxC,EAAKsB,MACpBiB,EAAME,KAAKD,EAAKrI,KAAK,EACrBqI,EAAOA,EAAKpB,KAEb,OAAOmB,CA7aP,EAOArE,MAAO,CACNwE,IAAK,GAcLlH,IAAK,SAAUmH,EAAMnF,GACpB,IAAIU,EAAQtF,EAAEsF,MAAMwE,IAEpBxE,EAAMyE,GAAQzE,EAAMyE,IAAS,GAE7BzE,EAAMyE,GAAMF,KAAKjF,CAAQ,CAC1B,EAWAW,IAAK,SAAUwE,EAAM3E,GACpB,IAAI4E,EAAYhK,EAAEsF,MAAMwE,IAAIC,GAE5B,GAAKC,GAAcA,EAAUnC,OAI7B,IAAK,IAAWjD,EAAP5C,EAAI,EAAc4C,EAAWoF,EAAUhI,CAAC,KAChD4C,EAASQ,CAAG,CAEd,CACD,EAEA9E,MAAOA,CACR,EAoBA,SAASA,EAAMC,EAAMC,EAASC,EAAOwJ,GAUpCtF,KAAKpE,KAAOA,EASZoE,KAAKnE,QAAUA,EAQfmE,KAAKlE,MAAQA,EAEbkE,KAAKkD,OAAqC,GAA3BoC,GAAc,IAAIpC,MAClC,CA6EA,SAASiB,EAAaX,EAASM,EAAK7E,EAAMqE,GACzCE,EAAQ+B,UAAYzB,EAChBJ,EAAQF,EAAQ/F,KAAKwB,CAAI,EAO7B,OANIyE,GAASJ,GAAcI,EAAM,KAE5B8B,EAAmB9B,EAAM,GAAGR,OAChCQ,EAAMU,OAASoB,EACf9B,EAAM,GAAKA,EAAM,GAAGlH,MAAMgJ,CAAgB,GAEpC9B,CACR,CAgLA,SAASlB,IAER,IAAIG,EAAO,CAAE/F,MAAO,KAAMgI,KAAM,KAAMf,KAAM,IAAK,EAE7CE,EAAO,CAAEnH,MAAO,KAAMgI,KAAMjC,EAAMkB,KAAM,IAAK,EACjDlB,EAAKkB,KAAOE,EAGZ/D,KAAK2C,KAAOA,EAEZ3C,KAAK+D,KAAOA,EACZ/D,KAAKkD,OAAS,CACf,CAWA,SAASR,EAASD,EAAMwC,EAAMrI,GAE7B,IAAIiH,EAAOoB,EAAKpB,KAEZ4B,EAAU,CAAE7I,MAAOA,EAAOgI,KAAMK,EAAMpB,KAAMA,CAAK,EAKrD,OAJAoB,EAAKpB,KAAO4B,EACZ5B,EAAKe,KAAOa,EACZhD,EAAKS,MAAM,GAEJuC,CACR,CASA,SAASX,EAAYrC,EAAMwC,EAAMS,GAEhC,IADA,IAAI7B,EAAOoB,EAAKpB,KACPxG,EAAI,EAAGA,EAAIqI,GAAS7B,IAASpB,EAAKsB,KAAM1G,CAAC,GACjDwG,EAAOA,EAAKA,MAEboB,EAAKpB,KAAOA,GACPe,KAAOK,EACZxC,EAAKS,QAAU7F,CAChB,CA6EA,OAvbAzC,EAAMI,MAAQK,EA+EdM,EAAMuG,UAAY,SAASA,EAAU/F,EAAG2B,GACvC,GAAgB,UAAZ,OAAO3B,EACV,OAAOA,EAER,IACKwJ,EADL,GAAI5J,MAAMC,QAAQG,CAAC,EAKlB,OAJIwJ,EAAI,GACRxJ,EAAEgB,QAAQ,SAAUyI,GACnBD,GAAKzD,EAAU0D,EAAG9H,CAAQ,CAC3B,CAAC,EACM6H,EAGR,IAqBSP,EArBL3E,EAAM,CACT7E,KAAMO,EAAEP,KACRC,QAASqG,EAAU/F,EAAEN,QAASiC,CAAQ,EACtC+H,IAAK,OACLC,QAAS,CAAC,QAAS3J,EAAEP,MACrBmK,WAAY,GACZjI,SAAUA,CACX,EAEIkI,EAAU7J,EAAEL,MAWZiK,GAVAC,IACCjK,MAAMC,QAAQgK,CAAO,EACxBjK,MAAMM,UAAU6I,KAAKpE,MAAML,EAAIqF,QAASE,CAAO,EAE/CvF,EAAIqF,QAAQZ,KAAKc,CAAO,GAI1B3K,EAAEsF,MAAMC,IAAI,OAAQH,CAAG,EAEN,IACjB,IAAS2E,KAAQ3E,EAAIsF,WACpBA,GAAc,IAAMX,EAAO,MAAQ3E,EAAIsF,WAAWX,IAAS,IAAIlJ,QAAQ,KAAM,QAAQ,EAAI,IAG1F,MAAO,IAAMuE,EAAIoF,IAAM,WAAapF,EAAIqF,QAAQG,KAAK,GAAG,EAAI,IAAMF,EAAa,IAAMtF,EAAI5E,QAAU,KAAO4E,EAAIoF,IAAM,GACrH,EAsQKjL,EAAMuD,WAyBP+H,EAAS7K,EAAEG,KAAK0C,cAAc,KAGjC7C,EAAEuG,SAAWsE,EAAO5H,IAEhB4H,EAAO1E,aAAa,aAAa,KACpCnG,EAAEC,OAAS,CAAA,GAURD,EAAEC,SAQa,aADfL,EAAakD,SAASlD,aACqB,gBAAfA,GAAgCiL,GAAUA,EAAOC,MAChFhI,SAASiI,iBAAiB,mBAAoBC,CAA8B,EAExExL,OAAOyL,sBACVzL,OAAOyL,sBAAsBD,CAA8B,EAE3DxL,OAAO0L,WAAWF,EAAgC,EAAE,IAtDjDzL,EAAMwL,kBAKN/K,CAAAA,EAAEE,6BAENX,EAAMwL,iBAAiB,UAAW,SAAUtE,GAC3C,IAAI0E,EAAUvE,KAAKwE,MAAM3E,EAAIC,IAAI,EAC7B7G,EAAOsL,EAAQ1I,SACfqD,EAAOqF,EAAQrF,KACfgB,EAAiBqE,EAAQrE,eAE7BvH,EAAMoH,YAAY3G,EAAE+G,UAAUjB,EAAM9F,EAAEyD,UAAU5D,GAAOA,CAAI,CAAC,EACxDiH,GACHvH,EAAM8L,MAAM,CAEd,EAAG,CAAA,CAAK,EA0CHrL,EAzBP,SAASgL,IACHhL,EAAEC,QACND,EAAEgF,aAAa,CAEjB,CAuBD,EAAEzF,KAAM,EAEc,aAAlB,OAAO+L,QAA0BA,OAAOC,UAC3CD,OAAOC,QAAU5L,OAII,aAAlB,OAAOyI,SACVA,OAAOzI,MAAQA,OAoDhBA,MAAM8D,UAAU+H,OAAS,CACxBC,QAAW,CACVtD,QAAS,8BACTD,OAAQ,CAAA,CACT,EACAwD,OAAU,CACTvD,QAAS,iBACTD,OAAQ,CAAA,CACT,EACAyD,QAAW,CAEVxD,QAAS,uHACTD,OAAQ,CAAA,EACRjE,OAAQ,CACP2H,kBAAmB,CAClBzD,QAAS,6BACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQ,IACT,EACA4H,OAAU,CACT1D,QAAS,kBACTD,OAAQ,CAAA,CACT,EACA4D,YAAe,eACfC,cAAe,YACfhC,KAAQ,YACT,CACD,EACAiC,MAAS,CACR7D,QAAS,4BACTD,OAAQ,CAAA,CACT,EACAsC,IAAO,CACNrC,QAAS,uHACTD,OAAQ,CAAA,EACRjE,OAAQ,CACPuG,IAAO,CACNrC,QAAS,iBACTlE,OAAQ,CACP6H,YAAe,QACfG,UAAa,cACd,CACD,EACAC,eAAgB,GAChBC,aAAc,CACbhE,QAAS,qCACTlE,OAAQ,CACP6H,YAAe,CACd,CACC3D,QAAS,KACT1H,MAAO,aACR,EACA,CACC0H,QAAS,mBACTF,WAAY,CAAA,CACb,EAEF,CACD,EACA6D,YAAe,OACfM,YAAa,CACZjE,QAAS,YACTlE,OAAQ,CACPgI,UAAa,cACd,CACD,CAED,CACD,EACAI,OAAU,CACT,CACClE,QAAS,kBACT1H,MAAO,cACR,EACA,qBAEF,EAEAd,MAAM8D,UAAU+H,OAAY,IAAEvH,OAAO,cAAcA,OAAe,OACjEtE,MAAM8D,UAAU+H,OAAe,OAChC7L,MAAM8D,UAAU+H,OAAgB,QAAEvH,OAAO,mBAAmBA,OAAStE,MAAM8D,UAAU+H,OAGrF7L,MAAM2F,MAAM1C,IAAI,OAAQ,SAAUwC,GAEhB,WAAbA,EAAI7E,OACP6E,EAAIsF,WAAkB,MAAItF,EAAI5E,QAAQK,QAAQ,QAAS,GAAG,EAE5D,CAAC,EAEDE,OAAOO,eAAe3B,MAAM8D,UAAU+H,OAAOhB,IAAK,aAAc,CAY/DjJ,MAAO,SAAoB+K,EAASzM,GACnC,IAAI0M,EAAsB,GAQtBtI,GAPJsI,EAAoB,YAAc1M,GAAQ,CACzCsI,QAAS,oCACTF,WAAY,CAAA,EACZhE,OAAQtE,MAAM8D,UAAU5D,EACzB,EACA0M,EAA2B,MAAI,uBAElB,CACZC,iBAAkB,CACjBrE,QAAS,4BACTlE,OAAQsI,CACT,CACD,GAMIE,GALJxI,EAAO,YAAcpE,GAAQ,CAC5BsI,QAAS,UACTlE,OAAQtE,MAAM8D,UAAU5D,EACzB,EAEU,IACV4M,EAAIH,GAAW,CACdnE,QAASzF,OAAO,wFAAwF4F,OAAOzH,QAAQ,MAAO,WAAc,OAAOyL,CAAS,CAAC,EAAG,GAAG,EACnKrE,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQA,CACT,EAEAtE,MAAM8D,UAAUO,aAAa,SAAU,QAASyI,CAAG,CACpD,CACD,CAAC,EACD1L,OAAOO,eAAe3B,MAAM8D,UAAU+H,OAAOhB,IAAK,eAAgB,CAYjEjJ,MAAO,SAAUmL,EAAU7M,GAC1BF,MAAM8D,UAAU+H,OAAOhB,IAAIvG,OAAO,gBAAgB4F,KAAK,CACtD1B,QAASzF,OACR,aAAa4F,OAAS,MAAQoE,EAAW,IAAM,iDAAiDpE,OAChG,GACD,EACAL,WAAY,CAAA,EACZhE,OAAQ,CACPmI,YAAa,WACbD,aAAc,CACbhE,QAAS,WACTlE,OAAQ,CACP1C,MAAS,CACR4G,QAAS,yCACTF,WAAY,CAAA,EACZxH,MAAO,CAACZ,EAAM,YAAcA,GAC5BoE,OAAQtE,MAAM8D,UAAU5D,EACzB,EACAiM,YAAe,CACd,CACC3D,QAAS,KACT1H,MAAO,aACR,EACA,MAEF,CACD,CACD,CACD,CAAC,CACF,CACD,CAAC,EAEDd,MAAM8D,UAAUkJ,KAAOhN,MAAM8D,UAAU+H,OACvC7L,MAAM8D,UAAUmJ,OAASjN,MAAM8D,UAAU+H,OACzC7L,MAAM8D,UAAUoJ,IAAMlN,MAAM8D,UAAU+H,OAEtC7L,MAAM8D,UAAUqJ,IAAMnN,MAAM8D,UAAUK,OAAO,SAAU,EAAE,EACzDnE,MAAM8D,UAAUsJ,KAAOpN,MAAM8D,UAAUqJ,IACvCnN,MAAM8D,UAAUuJ,KAAOrN,MAAM8D,UAAUqJ,IACvCnN,MAAM8D,UAAUwJ,IAAMtN,MAAM8D,UAAUqJ,IAErC,SAAUnN,GAEV,IAAIkM,EAAS,8EAuDTL,GArDJ7L,EAAM8D,UAAUyJ,IAAM,CACrBzB,QAAW,mBACX0B,OAAU,CACThF,QAASzF,OAAO,aAAe,sBAAsB4F,OAAS,IAAMuD,EAAOvD,OAAS,MAAQ,kBAAkBA,MAAM,EACpHrE,OAAQ,CACPmJ,KAAQ,WACRC,6BAA8B,CAC7BlF,QAAS,4FACTF,WAAY,CAAA,EACZxH,MAAO,UACR,EACA6M,QAAW,CACVnF,QAAS,yCACTF,WAAY,CAAA,CACb,CAED,CACD,EACAsF,IAAO,CAENpF,QAASzF,OAAO,eAAiBmJ,EAAOvD,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,GAAG,EACzGJ,OAAQ,CAAA,EACRjE,OAAQ,CACPuJ,SAAY,QACZ1B,YAAe,UACfD,OAAU,CACT1D,QAASzF,OAAO,IAAMmJ,EAAOvD,OAAS,GAAG,EACzC7H,MAAO,KACR,CACD,CACD,EACA4E,SAAY,CACX8C,QAASzF,OAAO,qDAAuDmJ,EAAOvD,OAAS,eAAe,EACtGL,WAAY,CAAA,CACb,EACA4D,OAAU,CACT1D,QAAS0D,EACT3D,OAAQ,CAAA,CACT,EACArD,SAAY,CACXsD,QAAS,oFACTF,WAAY,CAAA,CACb,EACAwF,UAAa,gBACbD,SAAY,CACXrF,QAAS,kCACTF,WAAY,CAAA,CACb,EACA6D,YAAe,WAChB,EAEAnM,EAAM8D,UAAUyJ,IAAY,OAAEjJ,OAAOgD,KAAOtH,EAAM8D,UAAUyJ,IAE/CvN,EAAM8D,UAAU+H,QACzBA,IACHA,EAAOhB,IAAIkD,WAAW,QAAS,KAAK,EACpClC,EAAOhB,IAAImD,aAAa,QAAS,KAAK,EAGxC,EAAEhO,KAAM,EAERA,MAAM8D,UAAUmK,MAAQ,CACvBnC,QAAW,CACV,CACCtD,QAAS,kCACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACA,CACCC,QAAS,mBACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,GAED2D,OAAU,CACT1D,QAAS,iDACTD,OAAQ,CAAA,CACT,EACA2F,aAAc,CACb1F,QAAS,2FACTF,WAAY,CAAA,EACZhE,OAAQ,CACP6H,YAAe,OAChB,CACD,EACAwB,QAAW,6GACXQ,QAAW,qBACXN,SAAY,cACZO,OAAU,4DACVC,SAAY,+CACZlC,YAAe,eAChB,EAEAnM,MAAM8D,UAAUwK,WAAatO,MAAM8D,UAAUK,OAAO,QAAS,CAC5D+J,aAAc,CACblO,MAAM8D,UAAUmK,MAAM,cACtB,CACCzF,QAAS,0GACTF,WAAY,CAAA,CACb,GAEDqF,QAAW,CACV,CACCnF,QAAS,uBACTF,WAAY,CAAA,CACb,EACA,CACCE,QAAS,mdACTF,WAAY,CAAA,CACb,GAGDuF,SAAY,oGACZO,OAAU,CACT5F,QAASzF,OACR,aAAa4F,OACb,MAGC,eAAeA,OACf,IAEA,0BAA0BA,OAC1B,IAEA,4BAA4BA,OAC5B,IAEA,sCAAsCA,OACtC,IAEA,gBAAgBA,OAChB,IAEA,oFAAoFA,OAErF,IACA,YAAYA,MACb,EACAL,WAAY,CAAA,CACb,EACA+F,SAAY,2FACb,CAAC,EAEDrO,MAAM8D,UAAUwK,WAAW,cAAc,GAAG9F,QAAU,uEAEtDxI,MAAM8D,UAAUO,aAAa,aAAc,UAAW,CACrDkK,MAAS,CACR/F,QAASzF,OAGR,0DAA0D4F,OAK1D,KAAKA,OACL,MACA,iEAAiEA,OACjE,IAEA,qIAAqIA,OACrI,IAEA,kEAAkEA,MACnE,EACAL,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQ,CACPkK,eAAgB,CACfhG,QAAS,4BACTF,WAAY,CAAA,EACZxH,MAAO,iBACPwD,OAAQtE,MAAM8D,UAAUyK,KACzB,EACAE,kBAAmB,UACnBC,cAAe,UAChB,CACD,EAEAC,oBAAqB,CACpBnG,QAAS,gMACT1H,MAAO,UACR,EACA8N,UAAa,CACZ,CACCpG,QAAS,sIACTF,WAAY,CAAA,EACZhE,OAAQtE,MAAM8D,UAAUwK,UACzB,EACA,CACC9F,QAAS,qFACTF,WAAY,CAAA,EACZhE,OAAQtE,MAAM8D,UAAUwK,UACzB,EACA,CACC9F,QAAS,kEACTF,WAAY,CAAA,EACZhE,OAAQtE,MAAM8D,UAAUwK,UACzB,EACA,CACC9F,QAAS,8eACTF,WAAY,CAAA,EACZhE,OAAQtE,MAAM8D,UAAUwK,UACzB,GAEDO,SAAY,2BACb,CAAC,EAED7O,MAAM8D,UAAUO,aAAa,aAAc,SAAU,CACpDyK,SAAY,CACXtG,QAAS,QACTD,OAAQ,CAAA,EACRzH,MAAO,SACR,EACAiO,kBAAmB,CAClBvG,QAAS,2EACTD,OAAQ,CAAA,EACRjE,OAAQ,CACP0K,uBAAwB,CACvBxG,QAAS,QACT1H,MAAO,QACR,EACAmO,cAAiB,CAChBzG,QAAS,mEACTF,WAAY,CAAA,EACZhE,OAAQ,CACP4K,4BAA6B,CAC5B1G,QAAS,YACT1H,MAAO,aACR,EACAwG,KAAMtH,MAAM8D,UAAUwK,UACvB,CACD,EACApC,OAAU,SACX,CACD,EACAiD,kBAAmB,CAClB3G,QAAS,4EACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRzH,MAAO,UACR,CACD,CAAC,EAEDd,MAAM8D,UAAUO,aAAa,aAAc,WAAY,CACtD+K,mBAAoB,CACnB5G,QAAS,oFACTF,WAAY,CAAA,EACZxH,MAAO,UACR,CACD,CAAC,EAEGd,MAAM8D,UAAU+H,SACnB7L,MAAM8D,UAAU+H,OAAOhB,IAAIkD,WAAW,SAAU,YAAY,EAI5D/N,MAAM8D,UAAU+H,OAAOhB,IAAImD,aAC1B,yNAAyNrF,OACzN,YACD,GAGD3I,MAAM8D,UAAUuL,GAAKrP,MAAM8D,UAAUwK,WAEpC,SAAUtO,GACV,IAAIsP,EAAW,CACd,2BACA,8WAIGC,EAAgB,uDAAuD5G,OAGvEjG,EAAY,CACf8F,QAASzF,OAAOwM,EAAgB,gCAAgC5G,MAAM,EACtEL,WAAY,CAAA,EACZhE,OAAQ,CACPgI,UAAa,CACZ9D,QAAS,2CACTlE,OAAQ,CACP6H,YAAe,IAChB,CACD,CACD,CACD,EAEAnM,EAAM8D,UAAU0L,KAAOxP,EAAM8D,UAAUK,OAAO,QAAS,CACtD+J,aAAc,CACbxL,EACA,CAGC8F,QAASzF,OAAOwM,EAAgB,+BAA+B5G,MAAM,EACrEL,WAAY,CAAA,EACZhE,OAAQ5B,EAAU4B,MACnB,GAEDqJ,QAAW2B,EACXjB,SAAY,gFACb,CAAC,EAEDrO,EAAM8D,UAAUO,aAAa,OAAQ,SAAU,CAC9CoL,iBAAkB,CACjBjH,QAAS,mEACTD,OAAQ,CAAA,EACRjE,OAAQ,CACP2K,cAAiB,CAChBzG,QAAS,6DACTF,WAAY,CAAA,EACZhE,OAAQ,CACP6H,YAAe,aACfuD,WAAc,CACblH,QAAS,UACTlE,OAAQtE,EAAM8D,UAAU0L,IACzB,CACD,CACD,EACAtD,OAAU,SACX,CACD,EACAA,OAAUyD,KAAAA,CACX,CAAC,EAED3P,EAAM8D,UAAUO,aAAa,OAAQ,aAAc,CAClDuL,SAAY,CACXpH,QAAS,OACT1H,MAAO,UACR,CACD,CAAC,EAEDd,EAAM8D,UAAUO,aAAa,OAAQ,aAAc,CAClDwL,SAAY,CACXrH,QAAS,sEACTlE,OAAQ,CACP4J,aAAcxL,EACdiL,QAAW2B,EACXnD,YAAe,YACfkC,SAAY,OACb,CACD,CACD,CAAC,CACF,EAAErO,KAAM,EAEP,SAAUA,GAKV,IAAI8P,EAAsB,sDAAsDnH,OAE5EoH,EAAQ,0CAA0CpH,OACpDzH,QAAQ,WAAY,WAAc,OAAO4O,CAAqB,CAAC,EAE7D5D,EAAS,0EAA0EvD,OACnFqH,EAAS,8CAA8CrH,OAAOzH,QAAQ,SAAU,WAAc,OAAOgL,CAAQ,CAAC,EAE9G+D,EAAa,CAChBzH,QAASzF,OAAOmJ,CAAM,EACtB3D,OAAQ,CAAA,CACT,EACI2H,EAAc,CACjB1H,QAAS,gBACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EAOA,SAAS4H,EAAGxH,EAAQP,GAKnB,OAJAO,EAASA,EACPzH,QAAQ,SAAU,WAAc,OAAO8O,CAAQ,CAAC,EAChD9O,QAAQ,QAAS,WAAc,OAAO6O,CAAO,CAAC,EAEzChN,OAAO4F,EAAQP,CAAK,CAC5B,CAEApI,EAAM8D,UAAUsM,OAAS,CACxBC,YAAe,CACd7H,QAAS,kNACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQ,CACPgM,QAAW,CACV9H,QAAS2H,EAAG,gDAAgDxH,OAAQ,GAAG,EACvEL,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQ,CACPY,SAAY,CACXsD,QAAS,iBACTF,WAAY,CAAA,CACb,EACA4D,OAAU,CACT+D,EACA,CACCzH,QAAS,8BACTF,WAAY,CAAA,CACb,GAED+F,SAAY,OACZlC,YAAe,GAChB,CACD,EACAwB,QAAW,CACV,CAECnF,QAAS2H,EAAG,iEAAiExH,OAAQ,GAAG,EACxFL,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACA,CAECC,QAAS2H,EAAG,iEAAiExH,OAAQ,GAAG,EACxFL,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACA,CAECC,QAAS2H,EAAG,oBAAoBxH,OAAQ,GAAG,EAC3CL,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACA,CACCC,QAAS,OACTD,OAAQ,CAAA,CACT,GAEDuD,QAAWoE,EACXhE,OAAU+D,EACVM,SAAY,2BACZlC,SAAY,MACb,CACD,EACAvC,QAAWoE,CACZ,EAEAlQ,EAAM8D,UAAU0M,WAAaxQ,EAAM8D,UAAUsM,MAE9C,EAAEpQ,KAAM,EAERA,MAAM8D,UAAU2M,GAAKzQ,MAAM8D,UAAUK,OAAO,QAAS,CACpD+H,OAAU,CACT1D,QAAS,yCACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACAoF,QAAW,sKACXQ,QAAW,gCACXC,OAAU,CAET,+BAEA,gFAEA,sEAEDC,SAAY,wFACZqC,QAAW,0LACZ,CAAC,EAED1Q,MAAM8D,UAAUO,aAAa,KAAM,SAAU,CAC5CsM,KAAQ,CACPnI,QAAS,6BACTD,OAAQ,CAAA,CACT,CACD,CAAC,EAED,OAAOvI,MAAM8D,UAAU2M,GAAG,cAEzB,SAAUzQ,GAEV,IAAIsP,EAAW,mfAGXsB,EAAkB,6CAA6CjI,OAG/DjG,EAAY,CACf8F,QAASzF,OAAO,aAAa4F,OAASiI,EAAkB,gCAAgCjI,MAAM,EAC9FL,WAAY,CAAA,EACZhE,OAAQ,CACPgI,UAAa,CACZ9D,QAAS,2CACTlE,OAAQ,CACP6H,YAAe,IAChB,CACD,EACAA,YAAe,IAChB,CACD,EAEAnM,EAAM8D,UAAU+M,KAAO7Q,EAAM8D,UAAUK,OAAO,QAAS,CACtD+H,OAAU,CACT1D,QAAS,iCACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACA2F,aAAc,CACbxL,EACA,CAGC8F,QAASzF,OAAO,aAAa4F,OAASiI,EAAkB,+DAA+DjI,MAAM,EAC7HL,WAAY,CAAA,EACZhE,OAAQ5B,EAAU4B,MACnB,EACA,CAGCkE,QAASzF,OAAO,kFAAkF4F,OAASiI,EAAkB,aAAajI,MAAM,EAChJL,WAAY,CAAA,EACZhE,OAAQ5B,EAAU4B,MACnB,GAEDqJ,QAAW2B,EACXzB,SAAY,CACX7N,EAAM8D,UAAUmK,MAAMJ,SACtB,CACCrF,QAAS,mBACTF,WAAY,CAAA,CACb,GAED8F,OAAU,8IACVC,SAAY,CACX7F,QAAS,wEACTF,WAAY,CAAA,CACb,EACAuG,SAAY,oBACb,CAAC,EAED7O,EAAM8D,UAAUO,aAAa,OAAQ,SAAU,CAC9CyM,uBAAwB,CAEvBtI,QAAS,iDACTD,OAAQ,CAAA,EACRzH,MAAO,QACR,EACA6P,KAAQ,CACPnI,QAAS,4BACTD,OAAQ,CAAA,CACT,CACD,CAAC,EAEDvI,EAAM8D,UAAUO,aAAa,OAAQ,aAAc,CAClD0M,WAAc,CACbvI,QAAS,+BACTF,WAAY,CAAA,EACZxH,MAAO,aACR,EACA+O,SAAY,CACXrH,QAAS,kGACTlE,OAAQ,CACP4J,aAAcxL,EACdiL,QAAW2B,EACXnD,YAAe,YACfkC,SAAY,OACb,CACD,EACA2C,OAAU,CACT,CACCxI,QAASzF,OAAO,gBAAgB4F,OAASiI,EAAkB,0BAA0BjI,MAAM,EAC3FL,WAAY,CAAA,EACZhE,OAAQ,CACPgI,UAAa5J,EAAU4B,OAAOgI,UAC9BH,YAAe,KACfkC,SAAY,KACZH,aAAc,KACf,CACD,EACA,CACC1F,QAASzF,OAAO,yBAAyB4F,OAASiI,EAAkB,qBAAqBjI,MAAM,EAC/FL,WAAY,CAAA,EACZxH,MAAO,SACPwD,OAAQ,CACPgI,UAAa5J,EAAU4B,OAAOgI,UAC9B2E,OAAU,SACV9E,YAAe,KACfkC,SAAY,KACZH,aAAc,KACf,CACD,GAED5B,UAAa,CACZ9D,QAASzF,OACR,qJACE4F,OAAOzH,QAAQ,aAAc,WAAc,OAAOoO,EAAS3G,MAAQ,CAAC,CAAC,EACxEL,WAAY,CAAA,EACZhE,OAAQ,CACP6H,YAAe,IAChB,CACD,CACD,CAAC,CACF,EAAEnM,KAAM,EAEP,SAAUA,GACVA,EAAM8D,UAAUoN,OAASlR,EAAM8D,UAAUK,OAAO,QAAS,CACxDwJ,QAAW,CAEVnF,QAAS,2bACTF,WAAY,CAAA,CACb,EACAuF,SAAY,CACX,CACCrF,QAAS,iCACTD,OAAQ,CAAA,CACT,EACA,CACCC,QAAS,mCACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,GAED6F,OAAU,kIACVC,SAAY,sGACb,CAAC,EAED,OAAOrO,EAAM8D,UAAUoN,OAAO,cAE9B,IAAIC,EAAsB,CACzBjC,4BAA6B,CAC5B1G,QAAS,aACT1H,MAAO,aACR,EACA4O,WAAc,CACblH,QAAS,UACTlE,OAAQtE,EAAM8D,UAAUoN,MACzB,CACD,EAEAlR,EAAM8D,UAAUO,aAAa,SAAU,SAAU,CAEhDoL,iBAAkB,CACjB,CACCjH,QAAS,2CACT1H,MAAO,YACPwD,OAAQ,CACP2K,cAAiB,CAChBzG,QAAS,8BACTlE,OAAQ6M,CACT,EACAjF,OAAU,SACX,CACD,EACA,CACC1D,QAAS,iDACT1H,MAAO,aACPwD,OAAQ,CACP2K,cAAiB,CAChBzG,QAAS,qDACTF,WAAY,CAAA,EACZhE,OAAQ6M,CACT,EACAjF,OAAU,SACX,CACD,GAEDyE,KAAQ,CAEPnI,QAAS,6CACTD,OAAQ,CAAA,CACT,CACD,CAAC,EAED,OAAOvI,EAAM8D,UAAUoN,OAAe,OAEtClR,EAAM8D,UAAUO,aAAa,SAAU,UAAW,CACjD0M,WAAc,CACbvI,QAAS,sCACT1H,MAAO,SACR,CACD,CAAC,EAEDd,EAAM8D,UAAUO,aAAa,SAAU,WAAY,CAClD+M,MAAS,CACR5I,QAAS,gBACT1H,MAAO,QACR,CACD,CAAC,EAEDd,EAAM8D,UAAUuN,GAAKrR,EAAM8D,UAAUoN,OACrClR,EAAM8D,UAAUwN,IAAMtR,EAAM8D,UAAUoN,MACvC,EAAElR,KAAM,EAEP,SAAUA,GAGV,IADA,IAAIuR,EAAmB,8CAA8C5I,OAC5DtG,EAAI,EAAGA,EAAI,EAAGA,CAAC,GAEvBkP,EAAmBA,EAAiBrQ,QAAQ,UAAW,WAAc,OAAOqQ,CAAkB,CAAC,EAEhGA,EAAmBA,EAAiBrQ,QAAQ,UAAW,WAAc,MAAO,UAAUyH,MAAQ,CAAC,EAG/F3I,EAAM8D,UAAU0N,KAAO,CACtB1F,QAAW,CACV,CACCtD,QAASzF,OAAO,YAAY4F,OAAS4I,CAAgB,EACrDjJ,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,EACA,CACCC,QAAS,mBACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,CACT,GAED2D,OAAU,CACT1D,QAAS,wDACTD,OAAQ,CAAA,CACT,EACAoI,KAAQ,CACPnI,QAAS,2EACTD,OAAQ,CAAA,CACT,EACAkJ,UAAa,CACZjJ,QAAS,8CACTD,OAAQ,CAAA,EACRzH,MAAO,YACPwD,OAAQ,CACP4H,OAAU,IACX,CACD,EAGAwF,iBAAkB,CACjBlJ,QAAS,2DACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQ,CACPqN,sBAAuB,CACtBnJ,QAAS,UACT1H,MAAO,aACR,EACAwG,KAAM,IACP,CACD,EAEAsK,sBAAuB,CACtBpJ,QAAS,OACT1H,MAAO,QACR,EAEA+Q,qBAAsB,CACrBrJ,QAAS,iBACTF,WAAY,CAAA,EACZxH,MAAO,aACR,EACAyP,SAAY,QAEZuB,sBAAuB,CACtBtJ,QAAS,eACTF,WAAY,CAAA,EACZxH,MAAO,UACR,EACAiR,kBAAmB,CAClBvJ,QAAS,6CACTF,WAAY,CAAA,EACZxH,MAAO,YACR,EACAkR,qBAAsB,CACrB,CACCxJ,QAAS,qCACTF,WAAY,CAAA,EACZxH,MAAO,WACR,EACA,CACC0H,QAAS,wFACTF,WAAY,CAAA,EACZxH,MAAO,YACPwD,OAAQ,CACP6H,YAAe,IAChB,CACD,GAEDwB,QAAW,CAEV,8RAGA,gEAMDE,SAAY,kCACZoE,MAAS,CACRzJ,QAAS,SACT1H,MAAO,UACR,EACA+N,SAAY,sBACZX,aAAc,eAEd5B,UAAa,CACZ9D,QAAS,6DACTlE,OAAQ,CACP6H,YAAe,IAChB,CACD,EAGAiC,OAAU,6KACVD,QAAW,qBACXhC,YAAe,mCACfkC,SAAY,qDACb,EAEArO,EAAM8D,UAAU0N,KAAK,kBAAkBlN,OAAOgD,KAAOtH,EAAM8D,UAAU0N,KACrExR,EAAM8D,UAAU0N,KAAgB,UAAElN,OAAe,OAAItE,EAAM8D,UAAU0N,KAAa,MAEnF,EAAExR,KAAM,EAEP,SAAUA,GAEVA,EAAM8D,UAAUoO,WAAalS,EAAM8D,UAAUK,OAAO,aAAc,CACjE+J,aAAc,CACb1F,QAAS,+KACTF,WAAY,CAAA,EACZC,OAAQ,CAAA,EACRjE,OAAQ,IACT,EACAoM,QAAW,uFACZ,CAAC,EAGD1Q,EAAM8D,UAAUoO,WAAWvE,QAAQzD,KAClC,qDAEA,2FAEA,4BACD,EAGA,OAAOlK,EAAM8D,UAAUoO,WAAsB,UAC7C,OAAOlS,EAAM8D,UAAUoO,WAAW,oBAGlC,IAAIC,EAAanS,EAAM8D,UAAUK,OAAO,aAAc,EAAE,EACxD,OAAOgO,EAAW,cAElBnS,EAAM8D,UAAUoO,WAAW,cAAc5N,OAAS6N,EAElDnS,EAAM8D,UAAUO,aAAa,aAAc,WAAY,CACtD+N,UAAa,CACZ5J,QAAS,qBACTlE,OAAQ,CACP+N,GAAM,CACL7J,QAAS,KACT1H,MAAO,UACR,EACA+M,SAAY,UACb,CACD,EACAyE,mBAAoB,CAEnB9J,QAAS,yGACTD,OAAQ,CAAA,EACRjE,OAAQ,CACPuJ,SAAY,4DACZ0E,QAAW,CACV/J,QAAS,WACT1H,MAAO,aACPwD,OAAQ6N,CACT,CACD,CACD,CACD,CAAC,EAEDnS,EAAM8D,UAAU0O,GAAKxS,EAAM8D,UAAUoO,UAEtC,EAAElS,KAAM,EAEP,WAEA,IASIyS,EAOAC,EAMAC,EAkKAC,EApGJ,SAASC,EAAehN,GAOA,IANvBA,EAAWA,EAASiN,OAAO,SAAUlI,GAEhCmI,IAyFaxQ,EA1FUqI,GA+FrB/K,OAAOmT,iBAAmBA,iBAAiBzQ,CAAO,EAAKA,EAAQ0Q,cAAgB,KAH9E,MA3FqB,eAC5B,MAAsB,aAAfF,GAA4C,aAAfA,CACrC,CAAC,GAEY7K,UAITgL,EAAQrN,EAAS5E,IAAI,SAAUsB,GAClC,IAQI4Q,EARAC,EAAc7Q,EAAQ8Q,cAAc,MAAM,EAC1CC,EAAqB/Q,EAAQ8Q,cAAc,oBAAoB,EACnE,GAAKD,GAAgBE,EAqBrB,OAhBIC,EAAkBhR,EAAQ8Q,cAAc,qBAAqB,EAC7DF,EAAYC,EAAYhN,YAAYoN,MAAMd,CAAY,EAErDa,KACJA,EAAkBpQ,SAASsQ,cAAc,MAAM,GAC/B/Q,UAAY,qBAE5B0Q,EAAYM,YAAYH,CAAe,GAGxCA,EAAgBhN,UAAY,IAC5BgN,EAAgBI,MAAMC,QAAU,QAE5BC,EAAiBN,EAAgBO,sBAAsB,EAAEC,OAC7DR,EAAgBhN,UAAY,GAErB,CACNhE,QAASA,EACTyR,MAAOb,EACPc,YAAa,GACbJ,eAAgBA,EAChBK,MAAOX,CACR,CACD,CAAC,EAAET,OAAOqB,OAAO,GAEXhS,QAAQ,SAAUiS,GACvB,IAAIb,EAAkBa,EAAKF,MACvBF,EAAQI,EAAKJ,MACbC,EAAcG,EAAKH,YACnBJ,EAAiBO,EAAKP,eAE1BI,EAAYD,EAAM9L,OAAS,GAAKyH,KAAAA,EAChCqE,EAAM7R,QAAQ,SAAUkS,EAAMjL,GAC7B,IACKwB,EADDyJ,GAAsB,EAAdA,EAAKnM,SACZ0C,EAAI2I,EAAgBG,YAAYvQ,SAASsQ,cAAc,MAAM,CAAC,GAChEE,MAAMC,QAAU,QAClBhJ,EAAExE,YAAciO,GAEhBJ,EAAY7K,GAASyK,CAEvB,CAAC,CACF,CAAC,EAEDX,EAAM/Q,QAAQ,SAAUiS,GAKvB,IAJA,IAAIb,EAAkBa,EAAKF,MACvBD,EAAcG,EAAKH,YAEnBK,EAAa,EACRjS,EAAI,EAAGA,EAAI4R,EAAY/L,OAAQ7F,CAAC,GACjBsN,KAAAA,IAAnBsE,EAAY5R,KACf4R,EAAY5R,GAAKkR,EAAgBgB,SAASD,CAAU,IAAIR,sBAAsB,EAAEC,OAGnF,CAAC,EAEDb,EAAM/Q,QAAQ,SAAUiS,GACvB,IAAIb,EAAkBa,EAAKF,MACvBM,EAAUJ,EAAK7R,QAAQ8Q,cAAc,oBAAoB,EAE7DE,EAAgBI,MAAMC,QAAU,OAChCL,EAAgBhN,UAAY,GAE5B6N,EAAKH,YAAY9R,QAAQ,SAAU4R,EAAQU,GAC1CD,EAAQD,SAASE,GAAYd,MAAMI,OAASA,EAAS,IACtD,CAAC,CACF,CAAC,EACF,CAzKqB,KAAA,IAAV/T,OAA6C,aAApB,OAAOmD,WASvCsP,EAAc,eAOdC,EAAe,WAMfC,EAAS3S,MAAMoF,QAAQsP,YAAc,CAQxCC,QAAS,SAAUpS,EAAS6L,GAC3B,GAAwB,QAApB7L,EAAQoK,SAAsBpK,EAAQS,UAAUa,SAAS4O,CAAW,EAAxE,CAIA,IAcImC,EAdAC,EAAiBtS,EAAQ8Q,cAAc,oBAAoB,EAC/D,GAAKwB,EAeL,OAFID,GAHHxG,GANG0G,GADAC,EAAkBC,SAASzS,EAAQ0S,aAAa,YAAY,EAAG,EAAE,GAAK,IACnCJ,EAAeN,SAASrM,OAAS,KAGvEkG,EADGA,EAAS2G,EACHA,EAEN3G,GACM0G,EAGM1G,GAAS2G,EAElBF,EAAeN,SAASK,EAlB/B,CAmBD,EAUAM,OAAQ,SAAU3S,GACjBsQ,EAAe,CAACtQ,EAAQ,CACzB,EAYA4S,2BAA4B,CAAA,CAC7B,EA2GIvC,EAAYjD,KAAAA,EAChB9P,OAAOuL,iBAAiB,SAAU,WAC7BuH,EAAOwC,4BAA8BvC,IAAc/S,OAAOuV,aAG9DxC,EAAY/S,OAAOuV,WAEnBvC,EAAe9R,MAAMM,UAAUG,MAAMD,KAAK4B,SAAS4C,iBAAiB,OAAS0M,CAAW,CAAC,CAAC,EAC3F,CAAC,EAEDzS,MAAM2F,MAAM1C,IAAI,WAAY,SAAUwC,GACrC,IAKI4P,EA0BArB,EAEJV,EAjCK7N,EAAIU,OAKLkP,GADAlP,EAA+BV,EAAW,SACO,aAGxC,OAAO6P,KAAKD,EAAInP,QAAQ,IAKjCC,EAAKkN,cAAc,oBAAoB,GAKtCrT,MAAMQ,KAAKkD,SAASyC,EAAMsM,CAAW,IAK1CtM,EAAKnD,UAAUuS,OAAO9C,CAAW,EAEjC4C,EAAIrS,UAAUC,IAAIwP,CAAW,EAGzB+C,GADA9M,EAAQjD,EAAIU,KAAKuC,MAAMgK,CAAY,GAChBhK,EAAMR,OAAS,EAAI,EAGtC8L,EAAQ,IAAIjT,MAAMyU,EAAW,CAAC,EAAEvK,KAAK,eAAe,GAExDqI,EAAqBnQ,SAASsQ,cAAc,MAAM,GAC/BhN,aAAa,cAAe,MAAM,EACrD6M,EAAmB5Q,UAAY,oBAC/B4Q,EAAmB/M,UAAYyN,EAE3BqB,EAAI7O,aAAa,YAAY,IAChC6O,EAAI1B,MAAM8B,aAAe,eAAiBT,SAASK,EAAIJ,aAAa,YAAY,EAAG,EAAE,EAAI,IAG1FxP,EAAIlD,QAAQmR,YAAYJ,CAAkB,EAE1CT,EAAe,CAACwC,EAAI,EAEpBrV,MAAM2F,MAAMC,IAAI,eAAgBH,CAAG,GACpC,CAAC,EAEDzF,MAAM2F,MAAM1C,IAAI,eAAgB,SAAUwC,GACzCA,EAAIL,QAAUK,EAAIL,SAAW,GAC7BK,EAAIL,QAAQsP,YAAc,CAAA,CAC3B,CAAC,EAEF,EAAG"}